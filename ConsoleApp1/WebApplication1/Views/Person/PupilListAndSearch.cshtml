@model ReflectionIT.Mvc.Paging.PagingList<PupilViewModel>
@using ReflectionIT.Mvc.Paging
@addTagHelper *,ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "PupilListAndSearch";
}

@section Scripts{
    <script src="~/js/Education/pupil.js"></script>
}

<h1 style="display:flex; justify-content:center; align-items:center">Pupil Page</h1>
<div class="container">
    <form asp-action="PupilListAndSearch" method="get">
        <p>
            <b style="margin: 10px;"> Search By: </b>
            @Html.RadioButton("searchBy", "iin", true) <text class="marginForText">IIN</text>
            @Html.RadioButton("searchBy", "name") <text class="marginForText">Name</text>
            @Html.RadioButton("searchBy", "classYear") <text class="marginForText">Class Year</text>
            @Html.RadioButton("searchBy", "schoolID") <text class="marginForText">School ID</text>

        </p>
        <br />
        <p>
            <input type="search"
                   placeholder="Search Pupil..."
                   value="@ViewData["GetPupilDetails"]"
                   name="searchPupil"
                   style="width:300px;" />

            <input type="submit" value="Search" class="btn btn-primary" style="margin-left:15px" />

            <a class="btn btn-primary" style="margin-left:15px" asp-action="PupilList">Get All Pupil</a>
            <a class="btn btn-primary" style="margin-left:15px" asp-action="AddNewPupil">Add New Pupil</a>
        </p>
    </form>

    <form asp-action="PupilGrant" method="post">

        <p>
            <input type="number"
                   placeholder="Pupil ENT must be > ??? for GRANT"
                   value="@ViewData["PostMinValueForGrant"]"
                   min="0"
                   max="140"
                   name="minValueForGrant"
                   style="width:300px;" />

            <input type="submit" value="Выдать Грант" asp-action="PupilGrant" class="btn btn-primary" style="margin-left:15px" />
        </p>
    </form>

</div>

<div class="container">

    <table class="table">
        <thead>
            <tr>
                <th scope="col">IIN</th>
                <th scope="col">FIO</th>
                <th scope="col">Class Year</th>
                <th scope="col">School ID</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @foreach (var item in Model)
                {
                    <tr class="user">
                        <td>
                            @Html.ActionLink(@item.Iin, "PupilFullInfo", new { pupilId = item.Id })
                        </td>
                        <td> @item.Surname @item.Name @item.Patronymic </td>
                        @if (item.ClassYear == 0)
                        {
                            <td>Graduated</td>
                        }
                        else
                        {
                            <td> @item.ClassYear </td>
                        }
                        <td> @item.SchoolId</td>
                        <td>
                            <button class="btn btn-light edit" type="submit">@Html.ActionLink("Edit", "EditPupilData", "Person", new { pupilId = item.Id })</button>
                        </td>

                        <td>
                            <input class="btn btn-light deletePupil" data-name="@item.Iin" type="button" value="Delete" />
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>

    <nav aria-label="nav example">
        @if (this.Model != null)
        {
            @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
        }

    </nav>

</div>

<style>
    .marginForText {
        margin-right: 25px;
    }

    ul.pagination li {
        margin: 10px;
    }
</style>
